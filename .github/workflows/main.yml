name: CI Pipeline
on:
  push:
    branches:
      - main
      - develop
  pull_request:
jobs:
  # Install and cache Node modules
  install:
    name: Install node modules
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit
  # Run ESLint
  lint:
    name: Lint
    needs: install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Lint
        run: npm run lint
  # Perform Typescript checks
  typecheck:
    name: Type Check
    needs: install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Type Check
        run: npm run type-check
  # Run Release Command
  release:
    name: 'Semantic Release'
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') && success() }}
    needs: [lint, typecheck]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Build
        run: npm run build

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}